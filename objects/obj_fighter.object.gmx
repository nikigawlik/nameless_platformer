<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_entity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()

floatiness = 1.25 /2

invincible = false

fixture = -1

col_group = 1//-instance_number(obj_fighter)
event_user(0)


max_jumps = 2
jumps = max_jumps

mspd = 12 /2
macc = 4 /2
jmp = 23 /2
wjmp = 12 /2

//image_speed = 0

left = 0
right = 0
jump = 0
throw = 0
//slow = false
input_script = do_nothing


if !instance_exists(obj_ctrl)
    instance_create(0, 0, obj_ctrl)
    
sword= noone
//sword = instance_create(x, y, obj_sword)
//sword.persistent = 1


//sword_joint = physics_joint_revolute_create(id, sword, x, y, 0, 0, 0, 0, 0, 0, 0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>part_particles_create(partsys, x, y, p_blood, 50)
if instance_exists(sword)
    sword.holder = noone
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if instance_exists(sword)
    sword_joint = physics_joint_revolute_create(id, sword, x, y, 0, 0, 0, 0, 0, 0, 0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()

script_execute(input_script)

var fac = 1;//-(slow*0.5);
//show_debug_message(string(fac))

if right &amp;&amp; phy_speed_x &lt; mspd*fac
    //phy_speed_x =  mspd
    phy_speed_x += macc*fac
if left &amp;&amp; phy_speed_x &gt; -mspd*fac
    //phy_speed_x = -mspd    
    phy_speed_x -= macc*fac
    
if physics_test_overlap(x, y+4, 0, obj_wall)
|| physics_test_overlap(x, y+4, 0, obj_jumpable)
    jumps = max_jumps
    
if jump &amp;&amp; jumps &gt; 0
{
    jumps-- 
    phy_speed_y = -jmp
    if physics_test_overlap(x-2, y-1, 0, obj_wall)
        phy_speed_x += wjmp
    else
    if physics_test_overlap(x+2, y-1, 0, obj_wall)
        phy_speed_x += -wjmp
}


//if mouse_check_button_pressed(mb_right) 
if throw
{
    if sword != noone
    {
        physics_joint_delete(sword_joint)
    
        with sword
        {
            speed_ld(15, -phy_rotation)
            persistent = 0
            holder = noone            
        }
            
        sword = noone    
    }   
    else
    if physics_test_overlap(x, y, 0, obj_sword)
    {
        with obj_sword
            if physics_test_overlap(x, y, phy_rotation, other.id) &amp;&amp; holder == noone &amp;&amp; owner == noone
            {
                with other
                {
                    sword = other.id
                    sword.owner = id
                    sword.holder = id
                    sword.phy_position_x = phy_position_x
                    sword.phy_position_y = phy_position_y
                    sword.col_group = 0
                    with sword
                        event_user(0)
                    sword_joint = physics_joint_revolute_create(sword, id, phy_position_x, phy_position_y, 0, 0, 0, 0, 0, 0, 0)
                    sword.persistent = persistent
                }              
                break
            }
    }
}

if physics_test_overlap(x, y, 0, obj_sword) &amp;&amp; !invincible
    with obj_sword
        if physics_test_overlap(x, y, phy_rotation, other.id)
                if owner != other.id &amp;&amp; owner != noone
                {
                    with other
                        instance_destroy()
                    break
                }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_spike">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//phy_fixed_rotation = 1

if fixture != -1
    physics_remove_fixture(self, fixture)

var fix = physics_fixture_create();

physics_fixture_set_circle_shape(fix, 16)

physics_fixture_set_density(fix, 0.4)
physics_fixture_set_angular_damping(fix, 3)
physics_fixture_set_linear_damping(fix, .5)
physics_fixture_set_friction(fix, 2)
physics_fixture_set_collision_group(fix, col_group)

fixture = physics_fixture_bind(fix, self)
physics_fixture_delete(fix)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()
//draw_text(x, y, string(col_group))
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.100000001490116</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0</PhysicsObjectRestitution>
  <PhysicsObjectGroup>-1</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>1</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>2</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>2</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
